// -----------------------------------------------------------------------------
// This file contains all application-wide Sass mixins.
// -----------------------------------------------------------------------------

@mixin box-shadow($top, $left, $blur, $color, $inset: false) {
  @if $inset {
    -webkit-box-shadow: inset $top $left $blur $color;
    -moz-box-shadow: inset $top $left $blur $color;
    box-shadow: inset $top $left $blur $color;
  } @else {
    -webkit-box-shadow: $top $left $blur $color;
    -moz-box-shadow: $top $left $blur $color;
    box-shadow: $top $left $blur $color;
  }
}

@mixin calc($property, $expression) {
  #{$property}: -moz-calc(#{$expression});
  #{$property}: -webkit-calc(#{$expression});
  #{$property}: calc(#{$expression});
}


/* create classes prefixed with the theme for properties for classes using themify */
@mixin themify($themes: $themes) {
  @each $theme, $map in $themes {
    .theme-#{$theme} & {
      $theme-map: () !global;
      @each $key, $submap in $map {
        $value: map-get(map-get($themes, $theme), '#{$key}');
        $theme-map: map-merge(
          $theme-map,
          (
            $key: $value,
          )
        ) !global;
      }

      @content;
      $theme-map: null !global;
    }
  }
}

/*
  @param $color string e.g. #eee or red
  @param $width unit e.g. 15%
 */
@mixin bg-strike($color: false, $width: 25%) {
  display: flex;
  align-items: center;
  text-align: center;
  &:before, &:after {
    content: '';
    flex: 1;
    @if $color {
      border-bottom: 1px solid $color;
    } @else {
      border-bottom: 1px solid currentColor;
    }
  }
  &:before {
    margin: 0 .25em 0 $width;
  }
  &:after {
    margin: 0 $width 0 .25em;
  }
}




