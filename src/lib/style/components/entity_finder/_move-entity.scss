@use '../../abstracts/variables' as SRC;
@use 'sass:color';
@import 'node_modules/react-reflex/styles';

$-header-height: 40px;
$-border: 1px solid #dcdcdc;
$-finder-height: 500px;

.EntityFinder {
  &__SearchContainer {
    display: inline-flex;
    align-items: center;
    justify-content: right;
    border: $-border;
    margin: 5px;
    padding: 0px 10px;
    & &__SearchBox {
      float: right;
      max-width: 200px;
      margin: 10px 0px 10px 10px;
      border: none;
      box-shadow: none;
    }
    & &__SearchBox:focus {
      max-width: 500px;
      transition: all 0.5s;
    }
  }
}

.EntityViewReflexContainer {
  height: $-finder-height;
}

.EntityFinderTreeView {
  height: $-finder-height;
  border: $-border;
  overflow: auto;
  &__Row {
    width: 100%;
    display: inline-grid;
    grid-template-columns: 15px 25px auto 55px;
    padding: 16px 10px;
    align-items: center;
    &__ExpandButton {
      grid-column-start: 1;
      grid-column-end: 2;
      font-size: large;
      color: SRC.$primary-action-color-700;
      cursor: pointer;
    }

    &__EntityIcon {
      grid-column-start: 2;
      grid-column-end: 3;
    }

    &__EntityName {
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
    }
  }
  &__Row:hover {
    background: color.change(SRC.$primary-action-color-500, $alpha: 0.05);
  }
  &__Row__Selected,
  &__Row__Selected:hover {
    color: SRC.$primary-action-color-500;
    // font-weight: bold;
    background: color.change(SRC.$primary-action-color-500, $alpha: 0.2);

    .EntityFinderTreeView__Row__ExpandButton {
      color: SRC.$primary-action-color-500;
    }
  }

  &__SelectionHeader {
    height: $-header-height;
    border-bottom: $-border;
    display: flex;
    align-items: center;
  }
}

.EntityFinderDetailsView {
  height: $-finder-height;
  border: $-border;
  width: fill-container;
  &__HeaderRow {
    height: $-header-height;
    font-weight: bold;
    padding: 16px 10px;
    border-bottom: $-border;
    // boxShadow: '0 3px 10px rgba(93, 105, 171, 0.1)',
  }
  &__Row {
    border-bottom: 1px solid #f9f9f9;
    height: 40px;
  }

  &__Row:nth-child(even) {
    background: #f9f9f9;
  }

  &__Row:hover,
  &__Row:hover:nth-child(even) {
    background: color.change(SRC.$primary-action-color-500, $alpha: 0.2);
  }

  &__Row__Selected,
  &__Row__Selected:hover,
  &__Row__Selected:nth-child(even),
  &__Row__Selected:hover:nth-child(even) {
    background-color: SRC.$primary-action-color-500;
    color: white;
  }

  &__Row__Disabled,
  &__Row__Disabled:hover {
    opacity: 0.5;
  }
  
  // TODO: probably a better way to do this, maybe with grid?
  .IsSelectedColumn,
  .EntityIconColumn,
  .NameColumn,
  .AccessColumn,
  .IdColumn,
  .CreatedOnColumn,
  .ModifiedOnColumn,
  .VersionColumn {
    padding: 5px 12px;
    padding-left: 10px;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  }

  .IsSelectedColumn {
    width: 15px;
    .radio,
    .checkbox {
      margin: 7px 0px 2px 5px;
      min-width: 20px;
    }
  }

  .EntityIconColumn {
    text-align: center;
    width: 10px;
  }

  .NameColumn {
    width: 40%;
  }
  .AccessColumn {
    width: 40px;
  }
  .IdColumn {
    width: 10%;
  }
  .CreatedOnColumn {
    width: 15%;
  }
  .ModifiedOnColumn {
    width: 15%;
  }
  .VersionColumn {
    min-width: 150px;
    width: 20%;
  }

  .NameColumn:not(th),
  .AccessColumn:not(th),
  .IdColumn:not(th),
  .CreatedOnColumn:not(th),
  .ModifiedOnColumn:not(th) {
    border-right: $-border;
  }
}
