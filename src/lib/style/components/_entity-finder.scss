@use '../abstracts/variables' as SRC;
@use 'sass:color';

$-header-height: 40px;
$-border: 1px solid #dcdcdc;
$-finder-height: 500px;
$-selected-color: color.change(SRC.$primary-action-color-300, $alpha: 0.3);

@mixin -hover {
  // we use an inset box-shadow because border will affect the width of the component
  box-shadow: 0px 0px 0px 2px SRC.$primary-action-color-500 inset;
}

// https://github.com/leefsmp/Re-Flex/issues/27
.EntityViewReflexContainer {
  width: 100%;
}

.EntityFinder {
  &__Search {
    display: flex;
    justify-content: flex-end;
    align-items: center;
    margin: 10px 0px 10px 0px;
    height: 38px;
    &__SearchButton {
      border: $-border;
      cursor: pointer;
      padding: 5px 10px;
      margin: 10px 0px;
      svg {
        margin-right: 10px;
        margin-bottom: 2px;
      }
    }
    input.EntityFinder__Search__Input {
      background-color: transparent;
      height: 100%;
      width: 350px;
      margin: 10px 0px;
      padding: 5px 28px;
      box-shadow: none;
    }
  }

  &__Selected {
    min-width: 50%;
    width: max-content;
    white-space: nowrap;
    background: color.change(SRC.$primary-action-color-500, $alpha: 0.05);
    padding: 15px;
    margin: 15px 0px;
    color: SRC.$primary-action-color-700;
    &__DeselectButton {
      color: rgb(175, 0, 0);
      margin: 5px 8px;
      cursor: pointer;
      &__Icon {
        margin-bottom: 3px;
      }

      &__EntityName {
        font-weight: bold;
      }
    }
  }
}

.EntityViewReflexContainer {
  height: $-finder-height;
}

.EntityFinderTreeView {
  height: $-finder-height;
  border: $-border;
  overflow: hidden;
  &__Tree {
    height: $-finder-height - $-header-height;
    overflow: auto;
    .TreeNode {
      &__Content {
        width: 100%;
        display: inline-grid;
        grid-template-columns: 15px 27px auto auto;
        padding: 16px 10px 16px 20px;
        align-items: center;
        &__ExpandButton {
          text-align: center;
          grid-column-start: 1;
          grid-column-end: 2;
          font-size: large;
          color: SRC.$primary-action-color-700;
          cursor: pointer;
        }

        &__EntityIcon {
          text-align: center;
          grid-column-start: 2;
          grid-column-end: 3;
          margin-bottom: 3px;
        }

        &__EntityName {
          white-space: nowrap;
          overflow: hidden;
          text-overflow: ellipsis;
        }
      }
      &__Content:hover {
        @include -hover();
      }

      &__Children[aria-hidden='true'] {
        display: none;
      }
    }

    .TreeNode[aria-selected='true'] {
      > .TreeNode__Content {
        background: $-selected-color;

        .EntityFinderTreeView__Content__ExpandButton {
          color: SRC.$primary-action-color-500;
        }
      }
      .TreeNode[aria-selected='false'] > .TreeNode__Content {
        background: color.change(SRC.$primary-action-color-500, $alpha: 0.05);
      }
    }
  }

  &__SelectionHeader {
    height: $-header-height;
    border-bottom: $-border;
    display: flex;
    align-items: center;
    button.btn {
      background: none;
      padding: 0px 10px;
      margin: 0px;
      height: $-header-height;
      border: none;
    }
    button.btn::after {
      margin-left: 7px;
    }
  }

  &__Placeholder {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 80%;
    &__Content {
      font-size: large;
    }
  }
}

.EntityFinderDetailsView {
  height: $-finder-height;
  border: $-border;
  width: 100%;
  overflow: auto;
  table {
    width: 100%;
    position: relative;
    border-collapse: collapse;
    thead {
      border-bottom: $-border;
      border-top: 1px solid white;
      th {
        height: $-header-height;
        font-weight: bold;

        background-color: white;
      }

      th > div {
        display: flex;
        justify-content: space-between;
        margin: 5px;
      }
    }
    td > div {
      margin: 5px;
    }
  }
  &__Row {
    height: 45px;
  }

  &__Row:nth-child(even) {
    background: #f9f9f9;
  }

  &__Row:hover {
    @include -hover();
  }

  &__Row[aria-selected='true'] {
    background-color: $-selected-color;
  }

  &__Row[aria-disabled='true'] {
    opacity: 0.5;
  }

  &__Row[aria-hidden='true'] {
    display: none;
  }

  &__Placeholder {
    display: flex;
    justify-content: center;
    flex-direction: column;
    align-items: center;
    height: 80%;
    font-size: large;

    .SearchPlaceholderImage {
      width: 150px;
      margin: 20px;
    }
  }

  // TODO: probably a better way to do this, maybe with grid?
  .IsSelectedColumn,
  .EntityIconColumn,
  .NameColumn,
  .AccessColumn,
  .IdColumn,
  .CreatedOnColumn,
  .ModifiedOnColumn,
  .VersionColumn {
    div {
      overflow: hidden;
      text-overflow: ellipsis;
      white-space: nowrap;
    }
  }

  .IsSelectedColumn {
    min-width: 40px;
    max-width: 40px;
    text-align: center;
    .radio,
    .checkbox {
      margin: 7px 0px 2px 5px;
      min-width: 20px;
    }
  }

  .EntityIconColumn {
    min-width: 40px;
    max-width: 40px;

    text-align: center;
    svg {
      fill: currentColor;
    }
  }

  .NameColumn {
    min-width: 250px;
    max-width: 350px;
  }
  .AccessColumn {
    width: 40px;
  }
  .IdColumn {
    min-width: 100px;
  }
  .CreatedOnColumn,
  .ModifiedOnColumn {
    min-width: 150px;
  }
  .VersionColumn {
    min-width: 200px;
  }
}
