@use '../style/abstracts/variables' as SRC;
//////////////////////////////////////////////////////////////
// params: $primary-action-color                            //
//////////////////////////////////////////////////////////////

/**
 * Defines our custom checkboxes and radio buttons
 * These handle both the Checkbox and RadioGroup components, as well as checkboxes and radio buttons rendered by other libraries (such as react-jsonschema-form)
 * So if you modify this file, please check all cases!
 * 
 * The styles work by hijacking an adjacent <span> or <label> and appending two pseudo-elements.
 * The :before pseudo-element creates the "empty" checkbox/radio, and, when checked, the :after pseudo-element creates the "check" or circle
 */

.checkbox,
.radio {
  padding-left: 0px;
  min-width: 27px;
}
input[type='checkbox'],
input[type='radio'] {
  // We don't hide the input tag with display: none because it makes the input inaccessible (you can't 'tab' into it)
  // See https://www.a11ywithlindsey.com/blog/create-custom-keyboard-accesible-checkboxes
  position: absolute !important;
  height: 1px;
  width: 1px;
  overflow: hidden;
  clip: rect(1px, 1px, 1px, 1px);
}

input[type='checkbox'] + label,
input[type='checkbox'] + span,
input[type='radio'] + label,
input[type='radio'] + span {
  position: relative;
  left: 22px;
}

input[type='checkbox'] + label::before,
input[type='checkbox'] + span::before,
input[type='radio'] + label::before,
input[type='radio'] + span::before {
  position: absolute;
  content: '';
  display: inline-block;
  vertical-align: middle;
  width: 16px;
  height: 16px;
  border: 1px solid #888;
  background: radial-gradient(white, #eee);
}

input[type='checkbox'] + label::before,
input[type='checkbox'] + span::before {
  border-radius: 2px;
  left: -22px;
  top: 2px;
}

input[type='radio'] + label::before,
input[type='radio'] + span::before {
  border-radius: 50%;
  left: 4px;
  top: 2px;
}

input[type='checkbox']:focus + label::before,
input[type='checkbox']:focus + span::before,
input[type='radio']:focus + label::before,
input[type='radio']:focus + span::before {
  box-shadow: 0px 0px 2px 2px SRC.$primary-action-color-active;
}

input[type='checkbox']:disabled + label::before,
input[type='checkbox']:disabled + span::before,
input[type='radio']:disabled + label::before,
input[type='radio']:disabled + span::before {
  background: #ddd;
}
input[type='checkbox']:disabled + label,
input[type='checkbox']:disabled + span,
input[type='radio']:disabled + label,
input[type='radio']:disabled + span {
  color: #777;
}

input[type='checkbox']:checked + label::after,
input[type='checkbox']:checked + span::after {
  content: 'âœ“';
  color: SRC.$primary-action-color;
  font-size: 14px;
  position: absolute;
  left: -20px;
  margin-right: 8px;
  font-weight: bolder;
}

input[type='radio']:checked + label::after,
input[type='radio']:checked + span::after {
  content: '';
  display: inline-block;
  vertical-align: middle;
  width: 10px;
  height: 10px;
  border-radius: 50%;
  background: SRC.$primary-action-color;
  position: absolute;
  top: 5px;
  left: 7px;
}

input[type='radio'] + label,
input[type='radio'] + span,
input[type='radio'] + label,
input[type='radio'] + span {
  padding-left: 23px;
  margin-left: -23px;
  color: #515359;
}

.checkbox label,
.radio label {
  padding-left: 0px;
}
