name: 'Set up pnpm and configure environment'
description: 'Installs Node, pnpm, fetches cache (if exists), and runs pnpm install'
inputs:
  STORE_NX_CACHE:
    description: 'Whether to store/load the Nx cache in the action cache'
    required: false
    default: 'false'
runs:
  using: 'composite'
  steps:
    - name: Use Node.js ${{ matrix.node-version || 20 }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version || 20 }}
        registry-url: https://registry.npmjs.org/
    - uses: pnpm/action-setup@v4
      name: Install pnpm
      id: pnpm-install
      with:
        version: 9
        run_install: false
    - name: Get pnpm store directory
      id: pnpm-cache
      shell: bash
      run: |
        echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT
    - name: Setup pnpm cache
      uses: actions/cache@v3
      with:
        path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
        key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-store-
    - name: Set up Nx build cache
      # Note that using the shared Nx cache may present security risks.
      # It should be safe to use when running tests, but do not use it in deploy workflows.
      # See: https://nx.dev/recipes/troubleshooting/unknown-local-cache#you-share-cache-with-another-machine-using-a-network-drive
      if: ${{ inputs.STORE_NX_CACHE == 'true' }}
      uses: actions/cache@v3
      with:
        path: .nx/cache
        key: ${{ runner.os }}-nx-${{ github.ref }}-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-nx-${{ github.ref }}-${{ github.sha }}
          ${{ runner.os }}-nx-${{ github.ref }}-
          ${{ runner.os }}-nx-
    - name: Install dependencies (use frozen lockfile)
      run: pnpm install --frozen-lockfile
      shell: bash
