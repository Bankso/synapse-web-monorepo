import{hj as s}from"./iframe-YNORiRmR.js";import{C as c}from"./ChallengeDetailPage-BG7i2lzp.js";import"./index-r8ZA1smB.js";import"./useGetEntityChallenge-DnRuw-wH.js";import"./useTeamMembers-Ce2g_1cG.js";import"./useGetUserTeams-Cii5PoCo.js";import"./useInfiniteQuery-DDQOECX-.js";import"./InfiniteQueryUtils-CKlRW-xB.js";import"./ChallengeRegisterButton-DnzoyTib.js";import"./ExitToApp-DHPFJ_4s.js";import"./SpinnerButton-C20vrVlL.js";import"./LoginAwareButton-E7xLicRf.js";import"./useAccessRequirements-B8deXdta.js";import"./index-DA-sFlI6.js";import"./_baseOrderBy-BIXLOcPh.js";import"./_baseIteratee-BgQd_HJ1.js";import"./_baseMap-CFWvhC-c.js";import"./_baseEach-CjXbPjj_.js";import"./useQueries-BhKGWhSp.js";import"./useEntity-CSu2QEQP.js";import"./pickBy-rr4lLDZz.js";import"./isString-CBX5AqAy.js";import"./queryOptions-C9woPjwX.js";import"./useEntityBundle-DoscKK1e.js";import"./AccessRequirementList-25YAS6uu.js";import"./groupBy-Cgtoxkug.js";import"./_createAggregator-D4BU7kPW.js";import"./DialogBase-iLRY9fRC.js";import"./Close-Bti9lGnZ.js";import"./HelpPopover-D5YAnV4f.js";import"./MarkdownPopover-z-2DvCPX.js";import"./LightTooltip-B6SUVl9G.js";import"./MarkdownSynapse-gLVhWgk-.js";import"./SkeletonButton-CDu-p3fM.js";import"./SkeletonInlineBlock-DuGmV4aM.js";import"./SkeletonTable-BD0sK0Ta.js";import"./SkeletonParagraph-EPv1fXrq.js";import"./EntityLink-CSWP5Xgw.js";import"./useGetEntityHeaders-CHUs91za.js";import"./EntityIcon-BE1L0-SL.js";import"./ErrorChip-B4rksfPO.js";import"./Chip-DuirGYLs.js";import"./UserOrTeamBadge-CekEw-Hi.js";import"./UserBadge-BHMAE20r.js";import"./MenuItem-DOC5mnQP.js";import"./Card-BuC37YY8.js";import"./TeamBadge-CA0JmfBQ.js";import"./UnmanagedACTAccessRequirementItem-Z92cpcLi.js";import"./RequirementItem-ZnIesCps.js";import"./LockTwoTone-C0QnK-F0.js";import"./UserSearchBoxV2-B3ie3oRs.js";import"./useDebouncedEffect-Cwm1bmBX.js";import"./use-deep-compare-effect.esm-LOSg95Yn.js";import"./uniq-Bpqgcvr3.js";import"./without-BJ6yohG8.js";import"./Select-aab027f3.esm-aVSe3Pz3.js";import"./defineProperty-CegpTSss.js";import"./ManagedACTAccessRequirementItemView-BPMYudyV.js";import"./SelfSignAccessRequirementItem-_G29gJpB.js";import"./DataAccessRequestAccessorsFilesForm-BRKgP-5t.js";import"./enums-D53qoOwY.js";import"./_arrayReduce-CrxnWFSq.js";import"./forEach-B8iwwgef.js";import"./useDataAccessSubmission-DmnRKgrK.js";import"./RadioGroup-BeUyDD7B.js";import"./Radio-Big1PWr_.js";import"./SwitchBase-0eQkQMrp.js";import"./FormGroup-XVBN8i9S.js";import"./FormControlLabel-DRZMOQkY.js";import"./UploadDocumentField-D4wZNAjp.js";import"./FileUpload-C3VsStdg.js";import"./ManagedACTAccessRequirementFormWikiWrapper-Xqx6mAhF.js";import"./GridLegacy-BT_vFzE1.js";import"./ResearchProjectForm-BkbznGSA.js";import"./TextFieldWithWordLimit-Dpp7enSP.js";import"./AuthenticatedRequirement-BgBpR3_B.js";import"./CertificationRequirement-pygzqUzU.js";import"./TwoFactorAuthEnabledRequirement-MkHkrrf8.js";import"./ValidationRequirement-WgzlDZxg.js";import"./ChallengeTeamWizard-BjTcQ6aE.js";import"./CreateChallengeTeam-CNx76YWP.js";import"./useTeam-yIT2I1UI.js";import"./papaparse.min-D1KxGBLm.js";import"./Search-CQyOjCZU.js";import"./Box-DND7TB-L.js";import"./DataGrid-CLELlt9C.js";import"./index-C-_p9hnQ.js";import"./index-Chjiymov.js";import"./index-3H7HeRk_.js";import"./Switch-DORwZlbN.js";import"./ListItemIcon-tltE5vgs.js";import"./Badge-BRDaFHSF.js";import"./usePreviousProps-DmC88lvM.js";import"./Autocomplete-qh6-F8MV.js";import"./KeyboardArrowRight-DYhvHPA2.js";import"./LastPage-BM6vhAcu.js";import"./ListItemText-CxVPhSDi.js";import"./Checkbox-C9i_hBz8.js";import"./InputAdornment-CR8Rt5_4.js";import"./extends-CF3RwP-h.js";import"./ConfirmationDialog-hAi2Tj4J.js";const mo={title:"Synapse/Challenge/ChallengeDetailPage",component:c,parameters:{backgrounds:{default:"Challenge Header",values:[{name:"Challenge Header",value:"#3E68AA"}]}}},r={args:{projectId:s.id},parameters:{stack:"mock"}},o={args:{projectId:"syn51208606"},parameters:{stack:"production"}};var t,m,p;r.parameters={...r.parameters,docs:{...(t=r.parameters)==null?void 0:t.docs,source:{originalSource:`{
  args: {
    projectId: mockProject.id
  },
  parameters: {
    stack: 'mock'
  }
}`,...(p=(m=r.parameters)==null?void 0:m.docs)==null?void 0:p.source}}};var i,e,a;o.parameters={...o.parameters,docs:{...(i=o.parameters)==null?void 0:i.docs,source:{originalSource:`{
  args: {
    projectId: 'syn51208606'
  },
  parameters: {
    stack: 'production'
  }
}`,...(a=(e=o.parameters)==null?void 0:e.docs)==null?void 0:a.source}}};const po=["MockDemo","ProductionDemo"];export{r as MockDemo,o as ProductionDemo,po as __namedExportsOrder,mo as default};
