import{hj as s}from"./iframe-CqK7cJYB.js";import{C as c}from"./ChallengeDetailPage-Ft0dDkXK.js";import"./index-r8ZA1smB.js";import"./useGetEntityChallenge-CMBK7s74.js";import"./useTeamMembers-DMFPfspG.js";import"./useGetUserTeams-BT1bNawk.js";import"./useInfiniteQuery-CisozDYI.js";import"./InfiniteQueryUtils-CKlRW-xB.js";import"./ChallengeRegisterButton-BGov-v9Q.js";import"./ExitToApp-C2LMLvA8.js";import"./SpinnerButton-D6aJSM-Y.js";import"./LoginAwareButton-CBdMneMP.js";import"./useAccessRequirements-sUWwdZJg.js";import"./index-BmyMLNdf.js";import"./_baseOrderBy-BByrgZf-.js";import"./_baseIteratee-BKPySCBI.js";import"./_baseMap-HJ-tnO7L.js";import"./_baseEach-CTliWlqj.js";import"./useQueries-BICuVczQ.js";import"./useEntity-CkY_2h_h.js";import"./pickBy-uAAN-PRV.js";import"./isString-o3r1x2Hk.js";import"./queryOptions-C9woPjwX.js";import"./useEntityBundle-8xj48AmX.js";import"./AccessRequirementList-YwzlW9qA.js";import"./groupBy-DLppQJ9d.js";import"./_createAggregator-D7ZVA9xA.js";import"./DialogBase-6DXYrV_C.js";import"./Close-ZjaYpzM7.js";import"./HelpPopover-CznEVNAa.js";import"./MarkdownPopover-CmRbAYXX.js";import"./LightTooltip-CHUEQZSK.js";import"./MarkdownSynapse-5ZAwBoHu.js";import"./SkeletonButton-D5ZIjaSN.js";import"./SkeletonInlineBlock-B9Mq_BP1.js";import"./SkeletonTable-DR3-Ofey.js";import"./SkeletonParagraph-D0zEeYHc.js";import"./EntityLink-DM7TNi-A.js";import"./useGetEntityHeaders-BB1iJstE.js";import"./EntityIcon-D5d7CgU_.js";import"./ErrorChip-CrLcZ7Nr.js";import"./Chip-Bs-SomAb.js";import"./UserOrTeamBadge-_t3ZeQEA.js";import"./UserBadge-DszVeQ9P.js";import"./MenuItem-sLh309bQ.js";import"./Card-BPc34rtl.js";import"./TeamBadge-CMqL8KfV.js";import"./UnmanagedACTAccessRequirementItem-D9zHvJYT.js";import"./RequirementItem-eKvmzE_d.js";import"./LockTwoTone-CdB1eQEg.js";import"./UserSearchBoxV2-Cz6xwPGN.js";import"./useDebouncedEffect-DkgEtTu8.js";import"./use-deep-compare-effect.esm-iyNxJVn6.js";import"./uniq-B_WbnRyJ.js";import"./without-no3r6z7f.js";import"./Select-aab027f3.esm-CU8l9392.js";import"./defineProperty-CegpTSss.js";import"./ManagedACTAccessRequirementItemView-XCfRieb3.js";import"./SelfSignAccessRequirementItem-B32AFqil.js";import"./DataAccessRequestAccessorsFilesForm-DanNG_nc.js";import"./enums-DZVgF9au.js";import"./_arrayReduce-CrxnWFSq.js";import"./forEach-B8iwwgef.js";import"./useDataAccessSubmission-incXCEev.js";import"./RadioGroup-BvSFJeFy.js";import"./Radio-DEv0UjYA.js";import"./SwitchBase-nMIyFfxW.js";import"./FormGroup-pwfjhOjW.js";import"./FormControlLabel-CUyG_bJd.js";import"./UploadDocumentField-DzwfTdJE.js";import"./FileUpload-B5UTZVtm.js";import"./ManagedACTAccessRequirementFormWikiWrapper-D4B3kR4u.js";import"./GridLegacy-DD7z4CqL.js";import"./ResearchProjectForm-Ddd8jD_P.js";import"./TextFieldWithWordLimit-BK_9ygIC.js";import"./AuthenticatedRequirement-BAuZ0xSc.js";import"./CertificationRequirement-BCgor5m8.js";import"./TwoFactorAuthEnabledRequirement-xncCYFLW.js";import"./ValidationRequirement-D9pQvu9L.js";import"./ChallengeTeamWizard-BVBGFIPf.js";import"./CreateChallengeTeam-DQ56wf9D.js";import"./useTeam-D7KPWe0Z.js";import"./papaparse.min-D1KxGBLm.js";import"./Search-BfUq_fNC.js";import"./Box-BBZ68V76.js";import"./DataGrid-BBRYI0G3.js";import"./index-C-_p9hnQ.js";import"./index-Chjiymov.js";import"./index-A9Ei48yJ.js";import"./Switch-CvTHdhlq.js";import"./ListItemIcon-B7Tw3TC0.js";import"./Badge-Bdakq6VY.js";import"./usePreviousProps-CAXjngJV.js";import"./Autocomplete-DqntPDcF.js";import"./KeyboardArrowRight-5k506Dz8.js";import"./LastPage-DkQcefCC.js";import"./ListItemText-DmspoSzD.js";import"./Checkbox-BefLVxlo.js";import"./InputAdornment-CeYj6JmE.js";import"./extends-CF3RwP-h.js";import"./ConfirmationDialog-BZjDOe4h.js";const mo={title:"Synapse/Challenge/ChallengeDetailPage",component:c,parameters:{backgrounds:{default:"Challenge Header",values:[{name:"Challenge Header",value:"#3E68AA"}]}}},r={args:{projectId:s.id},parameters:{stack:"mock"}},o={args:{projectId:"syn51208606"},parameters:{stack:"production"}};var t,m,p;r.parameters={...r.parameters,docs:{...(t=r.parameters)==null?void 0:t.docs,source:{originalSource:`{
  args: {
    projectId: mockProject.id
  },
  parameters: {
    stack: 'mock'
  }
}`,...(p=(m=r.parameters)==null?void 0:m.docs)==null?void 0:p.source}}};var i,e,a;o.parameters={...o.parameters,docs:{...(i=o.parameters)==null?void 0:i.docs,source:{originalSource:`{
  args: {
    projectId: 'syn51208606'
  },
  parameters: {
    stack: 'production'
  }
}`,...(a=(e=o.parameters)==null?void 0:e.docs)==null?void 0:a.source}}};const po=["MockDemo","ProductionDemo"];export{r as MockDemo,o as ProductionDemo,po as __namedExportsOrder,mo as default};
