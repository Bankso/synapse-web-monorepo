import{a3 as E,w as g,c7 as c,n as C,jw as O,H as _,g as h,r as p,j as o,B as f,P as T,b as l}from"./iframe-YNORiRmR.js";import{O as m}from"./OAuthClientAclEditor-D6N1eI0o.js";import"./index-r8ZA1smB.js";import"./useInfiniteQuery-DDQOECX-.js";import"./AclEditor-DB9W_k-z.js";import"./UserSearchBoxV2-B3ie3oRs.js";import"./useDebouncedEffect-Cwm1bmBX.js";import"./use-deep-compare-effect.esm-LOSg95Yn.js";import"./uniq-Bpqgcvr3.js";import"./without-BJ6yohG8.js";import"./UserBadge-BHMAE20r.js";import"./SkeletonTable-BD0sK0Ta.js";import"./MenuItem-DOC5mnQP.js";import"./Card-BuC37YY8.js";import"./Chip-DuirGYLs.js";import"./Select-aab027f3.esm-aVSe3Pz3.js";import"./defineProperty-CegpTSss.js";import"./UserOrTeamBadge-CekEw-Hi.js";import"./TeamBadge-CA0JmfBQ.js";import"./SkeletonButton-CDu-p3fM.js";import"./SkeletonInlineBlock-DuGmV4aM.js";import"./SkeletonParagraph-EPv1fXrq.js";import"./IconSvgButton-CZ5v5TIw.js";import"./FormControlLabel-DRZMOQkY.js";import"./Checkbox-C9i_hBz8.js";import"./SwitchBase-0eQkQMrp.js";import"./useUpdateAcl-CD-fgT1t.js";import"./AccessControlListUtils-COxwVKYx.js";const x={client_id:"1234"},I={id:x.client_id.toString(),resourceAccess:new Set([{principalId:E,accessType:new Set(c("CAN_ADMINISTER_OAUTH_CLIENT"))},{principalId:g,accessType:new Set(c("CAN_ADMINISTER_OAUTH_CLIENT"))}])},S=[I];function M(t){return C.get(`${t}${O(":id")}`,({params:e})=>{let r=404,n={concreteType:"org.sagebionetworks.repo.model.ErrorResponse",reason:`Mock Service worker could not find an ACL for OAuth client with ID ${e.id}`};const s=S.find(i=>i.id===e.id);return s&&(n=s,r=200),_.json(n,{status:r})})}function R(t){return C.put(`${t}${O(":id")}`,async({request:e})=>{const r=await e.json();return _.json(r,{status:200})})}function H(t){return[M(t),R(t)]}const nt={title:"Synapse/OAuthManagement/OAuthClientAclEditor",component:m,render:function(e){const[r,n]=p.useState(!1),s=p.useRef(null);return o.jsxs(o.Fragment,{children:[o.jsx(f,{onClick:()=>{var i;n(!0),(i=s.current)==null||i.save()},variant:"contained",disabled:r,children:"Save ACL"}),o.jsx(T,{sx:{mx:"auto",p:"44px",maxWidth:"750px"},children:o.jsx(m,{...e,ref:s,onSaveComplete:()=>n(!1)})})]})}},a={args:{clientId:I.id},parameters:{stack:"mock",msw:{handlers:[...h(l),H(l)]}}};var d,u,A;a.parameters={...a.parameters,docs:{...(d=a.parameters)==null?void 0:d.docs,source:{originalSource:`{
  args: {
    clientId: MOCK_OAUTH_CLIENT_ACL.id
  },
  parameters: {
    stack: 'mock',
    msw: {
      handlers: [...getUserProfileHandlers(MOCK_REPO_ORIGIN), getAllOAuthClientAclHandlers(MOCK_REPO_ORIGIN)]
    }
  }
}`,...(A=(u=a.parameters)==null?void 0:u.docs)==null?void 0:A.source}}};const st=["MockDemoExistingAcl"];export{a as MockDemoExistingAcl,st as __namedExportsOrder,nt as default};
