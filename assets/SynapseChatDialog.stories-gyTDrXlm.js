import{g as u}from"./chatHandlers-DWtP9oyW.js";import{j as a,B as d,g as c,d as f,b as n}from"./iframe-CqK7cJYB.js";import{S as g}from"./SynapseChat-C6Nxkjw7.js";import{D as _}from"./DialogBase-6DXYrV_C.js";import"./index-r8ZA1smB.js";import"./SkeletonButton-D5ZIjaSN.js";import"./SkeletonInlineBlock-B9Mq_BP1.js";import"./SkeletonTable-DR3-Ofey.js";import"./SkeletonParagraph-D0zEeYHc.js";import"./DropdownSelect-mBAbrgBq.js";import"./getValidReactChildren-DJMEwru3.js";import"./MenuItem-sLh309bQ.js";import"./MarkdownSynapse-5ZAwBoHu.js";import"./ListItem-B02j4yjI.js";import"./listItemButtonClasses-CeeY4FUM.js";import"./ListItemText-DmspoSzD.js";import"./ArrowUpward-gLf7Dnt5.js";import"./Close-ZjaYpzM7.js";import"./HelpPopover-CznEVNAa.js";import"./MarkdownPopover-CmRbAYXX.js";import"./LightTooltip-CHUEQZSK.js";function s(t){const{chatbotName:p="SynapseChat",open:m,onClose:r}=t;return a.jsx(_,{title:p,open:m,onCancel:r,maxWidth:"lg",content:a.jsx(g,{hideTitle:!0,textboxPositionOffset:"-24px",...t}),actions:a.jsx(d,{variant:"contained",color:"primary",onClick:()=>r(),children:"Close"})})}try{s.displayName="SynapseChatDialog",s.__docgenInfo={description:"",displayName:"SynapseChatDialog",props:{open:{defaultValue:null,description:"",name:"open",required:!0,type:{name:"boolean"}},onClose:{defaultValue:null,description:"",name:"onClose",required:!0,type:{name:"() => void"}},initialMessage:{defaultValue:null,description:"",name:"initialMessage",required:!1,type:{name:"string"}},agentRegistrationId:{defaultValue:null,description:"",name:"agentRegistrationId",required:!1,type:{name:"string"}},chatbotName:{defaultValue:null,description:"",name:"chatbotName",required:!1,type:{name:"string"}},sessionContext:{defaultValue:null,description:"",name:"sessionContext",required:!1,type:{name:"GridAgentSessionContext"}},externalSession:{defaultValue:null,description:"",name:"externalSession",required:!1,type:{name:"AgentSession"}},setExternalSession:{defaultValue:null,description:"",name:"setExternalSession",required:!1,type:{name:"(s: AgentSession) => void"}},externalInteractions:{defaultValue:null,description:"",name:"externalInteractions",required:!1,type:{name:"ChatInteraction[]"}},setExternalInteractions:{defaultValue:null,description:"",name:"setExternalInteractions",required:!1,type:{name:"(i: ChatInteraction[]) => void"}},defaultAgentAccessLevel:{defaultValue:null,description:"",name:"defaultAgentAccessLevel",required:!1,type:{name:"enum",value:[{value:'"PUBLICLY_ACCESSIBLE"'},{value:'"READ_YOUR_PRIVATE_DATA"'},{value:'"WRITE_YOUR_PRIVATE_DATA"'}]}},showAccessLevelMenu:{defaultValue:null,description:"",name:"showAccessLevelMenu",required:!1,type:{name:"boolean"}}}}}catch{}const{fn:C}=__STORYBOOK_MODULE_TEST__,U={title:"Synapse/Chat",component:s,parameters:{chromatic:{viewports:[600,1200]}}},e={args:{open:!0,onClose:C(),initialMessage:"hello"},parameters:{stack:"mock",msw:{handlers:[...c(n),...f(n),...u(n)]}}};var o,i,l;e.parameters={...e.parameters,docs:{...(o=e.parameters)==null?void 0:o.docs,source:{originalSource:`{
  args: {
    open: true,
    onClose: fn(),
    initialMessage: 'hello'
  },
  parameters: {
    stack: 'mock',
    msw: {
      handlers: [...getUserProfileHandlers(MOCK_REPO_ORIGIN), ...getEntityHandlers(MOCK_REPO_ORIGIN), ...getChatbotHandlers(MOCK_REPO_ORIGIN)]
    }
  }
}`,...(l=(i=e.parameters)==null?void 0:i.docs)==null?void 0:l.source}}};const j=["ChatWithSynapseDialog"];export{e as ChatWithSynapseDialog,j as __namedExportsOrder,U as default};
