import{c8 as T,r as u,j as o,e5 as x,d5 as B,c3 as M,jN as S,jO as k,jP as P,n as w,b as c,jQ as v,jR as D,jS as U,H,jT as A}from"./iframe-YNORiRmR.js";import{v as V,o as K}from"./useEntity-CSu2QEQP.js";import{u as q}from"./useEntityBundle-DoscKK1e.js";import{C as F}from"./ConfirmationDialog-hAi2Tj4J.js";import"./SkeletonButton-CDu-p3fM.js";import"./SkeletonInlineBlock-DuGmV4aM.js";import{S as G}from"./SkeletonTable-BD0sK0Ta.js";import"./SkeletonParagraph-EPv1fXrq.js";import{p as L}from"./MultiValueField-BZ3FhmOD.js";import{T as $}from"./TableColumnSchemaForm-Bl3pdQHr.js";import{k as W}from"./index-mTn7JX3J.js";import"./index-r8ZA1smB.js";import"./pickBy-rr4lLDZz.js";import"./isString-CBX5AqAy.js";import"./_baseIteratee-BgQd_HJ1.js";import"./useQueries-BhKGWhSp.js";import"./queryOptions-C9woPjwX.js";import"./useInfiniteQuery-DDQOECX-.js";import"./InfiniteQueryUtils-CKlRW-xB.js";import"./DialogBase-iLRY9fRC.js";import"./Close-Bti9lGnZ.js";import"./HelpPopover-D5YAnV4f.js";import"./MarkdownPopover-z-2DvCPX.js";import"./LightTooltip-B6SUVl9G.js";import"./MarkdownSynapse-gLVhWgk-.js";import"./JSONArrayEditorModal-IwQ-pzb4.js";import"./JsonSchemaForm-DPgn874r.js";import"./enums-D53qoOwY.js";import"./_arrayReduce-CrxnWFSq.js";import"./_baseEach-CjXbPjj_.js";import"./uniq-Bpqgcvr3.js";import"./forEach-B8iwwgef.js";import"./GridLegacy-BT_vFzE1.js";import"./HelpTwoTone-DH8L1TLC.js";import"./ContentCopy-B2SkMsza.js";import"./ArrowUpward-BBk4F2aS.js";import"./_commonjs-dynamic-modules-TDtrdbi3.js";import"./groupBy-Cgtoxkug.js";import"./_createAggregator-D4BU7kPW.js";import"./_baseMap-CFWvhC-c.js";import"./ListItem-BUlR9mdJ.js";import"./listItemButtonClasses-Ban1M7Nj.js";import"./DateTimePicker-C60kaRIn.js";import"./useMobilePicker-DiCAtlBe.js";import"./index-C-_p9hnQ.js";import"./index-Chjiymov.js";import"./visuallyHidden-Dan1xhjv.js";import"./InputAdornment-CR8Rt5_4.js";import"./index-DA-sFlI6.js";import"./Chip-DuirGYLs.js";import"./Tabs-DFzhJ-CG.js";import"./KeyboardArrowRight-DYhvHPA2.js";import"./MenuItem-DOC5mnQP.js";import"./Autocomplete-qh6-F8MV.js";import"./usePreviousProps-DmC88lvM.js";import"./TextWidget-qc0tXJj-.js";import"./papaparse.min-D1KxGBLm.js";import"./SchemaDrivenAnnotationEditor-BcXPOUEk.js";import"./use-deep-compare-effect.esm-LOSg95Yn.js";import"./pluralize-Dtp1DlEB.js";import"./EntityFinderModal-SWLYZDJI.js";import"./WarningDialog-Dx3hWpW0.js";import"./EntityFinder-DDljXy8l.js";import"./Search-CQyOjCZU.js";import"./immutable.es-BJjDfH8f.js";import"./defineProperty-CegpTSss.js";import"./extends-CF3RwP-h.js";import"./useEntitySelection-CuONH3UL.js";import"./useGetEntityChildren-fxqJQq2R.js";import"./StyledTanStackTable-CFILm036.js";import"./StyledTableContainer-C6LSLMPN.js";import"./ExpandCollapseButton-HKXS3ljs.js";import"./index-CsPBkyy4.js";import"./ColumnHeader-CGdiWwnd.js";import"./EnumFacetFilterUI-C-HCkzh-.js";import"./FacetFilterHeader-4GCBHBSB.js";import"./FormControlLabel-DRZMOQkY.js";import"./Checkbox-C9i_hBz8.js";import"./SwitchBase-0eQkQMrp.js";import"./Radio-Big1PWr_.js";import"./ModifiedOnCell-Ci0xN-I8.js";import"./useDownloadList-BWAlZMmY.js";import"./DownloadConfirmationUtils-DCQ7Vnn_.js";import"./UserBadge-BHMAE20r.js";import"./Card-BuC37YY8.js";import"./EntityBadgeIcons-CnsmpQzb.js";import"./index-jrGVMwH5.js";import"./EntityModal-B7K_Gz1h.js";import"./FileHandleUtils-CPWB4_la.js";import"./LockTwoTone-C0QnK-F0.js";import"./EntityIcon-BE1L0-SL.js";import"./FileEntityDirectDownload-1hN7lKTF.js";import"./DirectDownload-BS5Wt1OA.js";import"./SynapseTableConstants-2qH3fDlQ.js";import"./useFavorites-Da-drRtG.js";import"./useGetEntityHeaders-CHUs91za.js";import"./NoSearchResults-C5qI8B_5.js";import"./useSearch-Cy34Or8B.js";import"./DropdownSelect-B16sSUbf.js";import"./getValidReactChildren-DLiWcafJ.js";import"./index.esm-BBt64Oj4.js";import"./Grid-BWZWnqEH.js";import"./ListItemIcon-tltE5vgs.js";import"./ListItemText-CxVPhSDi.js";import"./FormGroup-XVBN8i9S.js";import"./RadioGroup-BeUyDD7B.js";import"./Slider-9_TfOyei.js";function y(n){var C,E;const{entityId:e,open:a,onColumnsUpdated:b=T,onCancel:O=T}=n,s=u.useRef(null),{data:t,isLoading:h}=q(e,void 0,{includeEntity:!0,includeTableBundle:!0},{staleTime:1/0,throwOnError:!0}),i=t==null?void 0:t.entity,l=(C=t==null?void 0:t.tableBundle)==null?void 0:C.columnModels,{mutate:f,isPending:r,error:m}=V({onSuccess:()=>{b()}}),N=u.useCallback(d=>{f({entityId:e,originalColumnModels:l,newColumnModels:d.map(j=>K(j,W))})},[e,f,l]),R=u.useMemo(()=>{if(i)return L(i)},[i]);return h||!t||!i?o.jsx(G,{numRows:8,numCols:7,rowHeight:"50px",fullWidthCells:!0}):o.jsx(F,{open:a,maxWidth:"xl",title:"Edit Columns",content:o.jsxs(o.Fragment,{children:[o.jsx($,{ref:s,entityType:B(i.concreteType),viewScope:R,initialData:(E=t==null?void 0:t.tableBundle)==null?void 0:E.columnModels,isSubmitting:r,onSubmit:d=>{N(d)},originalColumnModels:l}),m&&o.jsx(M,{severity:"error",sx:{my:2},children:m==null?void 0:m.message})]}),confirmButtonProps:{children:r?"Saving...":"Save",disabled:r,startIcon:r?o.jsx(x,{}):void 0},onConfirm:()=>{s.current&&s.current.submit()},cancelButtonProps:{disabled:r},onCancel:O})}try{y.displayName="TableColumnSchemaEditor",y.__docgenInfo={description:"Fetches column model data for a Synapse Table and renders a form to edit the column models.",displayName:"TableColumnSchemaEditor",props:{entityId:{defaultValue:null,description:"",name:"entityId",required:!0,type:{name:"string"}},open:{defaultValue:null,description:"",name:"open",required:!0,type:{name:"boolean"}},onColumnsUpdated:{defaultValue:null,description:"",name:"onColumnsUpdated",required:!1,type:{name:"() => void"}},onCancel:{defaultValue:null,description:"",name:"onCancel",required:!1,type:{name:"() => void"}}}}}catch{}const Yo={title:"Synapse/Table Column Schema Editor",component:y,parameters:{stack:"mock",design:[{name:"Use Recommended Sizes button",type:"figma",url:"https://www.figma.com/design/ek9F9IqpsS8UnihBR9filP/Schema-Editor?node-id=83-9747"}]}},Q={columnModels:A.columnModels,maxRowsPerPage:25},p={name:"Table Column Schema Editor",parameters:{msw:{handlers:[...k(c),...P(v,c),w.post(`${c}${D(":entityId")}`,({params:n})=>{const e=U.find(a=>a.id===n.entityId)||S;return H.json({entity:e.entity,tableBundle:Q},{status:200})})]}},args:{entityId:S.id,open:!0}};var _,g,I;p.parameters={...p.parameters,docs:{...(_=p.parameters)==null?void 0:_.docs,source:{originalSource:`{
  name: 'Table Column Schema Editor',
  parameters: {
    msw: {
      handlers: [...getDefaultColumnHandlers(MOCK_REPO_ORIGIN), ...getAnnotationColumnHandlers(MOCK_ANNOTATION_COLUMN_RESPONSE, MOCK_REPO_ORIGIN), http.post(\`\${MOCK_REPO_ORIGIN}\${ENTITY_BUNDLE_V2(':entityId')}\`, ({
        params
      }) => {
        const entity = mockEntities.find(entity => entity.id === params.entityId) || mockTableEntityData;
        return HttpResponse.json({
          entity: entity.entity,
          tableBundle: mockTableBundle
        }, {
          status: 200
        });
      })]
    }
  },
  args: {
    entityId: mockTableEntityData.id,
    open: true
  }
}`,...(I=(g=p.parameters)==null?void 0:g.docs)==null?void 0:I.source}}};const zo=["Demo"];export{p as Demo,zo as __namedExportsOrder,Yo as default};
